–ú–∏–≥—Ä–∞—Ü–∏—è —Å OpenAI SDK
=====================

–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –º–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ OpenAI Python SDK –Ω–∞ Evolution OpenAI.

–ü–æ—á–µ–º—É –º–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–æ—Å—Ç–∞
----------------------

Evolution OpenAI **–ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≤–º–µ—Å—Ç–∏–º** —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º OpenAI SDK:

‚úÖ **–ò–¥–µ–Ω—Ç–∏—á–Ω—ã–π API** - –≤—Å–µ –º–µ—Ç–æ–¥—ã –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ
‚úÖ **–¢–µ –∂–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö** - —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–æ–≤ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å  
‚úÖ **–°–æ–≤–º–µ—Å—Ç–∏–º—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è** - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–∞
‚úÖ **Async/await –ø–æ–¥–¥–µ—Ä–∂–∫–∞** - –≤—Å–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã
‚úÖ **Streaming API** - –ø–æ—Ç–æ–∫–æ–≤–∞—è –ø–µ—Ä–µ–¥–∞—á–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–¥–µ–Ω—Ç–∏—á–Ω–æ

–û—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
------------------

–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ—Ç–ª–∏—á–∏–µ - **—Å–ø–æ—Å–æ–± –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏**:

.. list-table:: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
   :header-rows: 1
   :widths: 50 50

   * - OpenAI SDK
     - Evolution OpenAI
   * - ``api_key="sk-..."``
     - ``key_id="your_key_id", secret="your_secret"``
   * - ``base_url`` (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
     - ``base_url`` (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
   * - ``organization`` (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
     - ``organization`` (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)

–ü–æ—à–∞–≥–æ–≤–∞—è –º–∏–≥—Ä–∞—Ü–∏—è
------------------

–®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞
~~~~~~~~~~~~~~~~

.. code-block:: bash

   # –£–¥–∞–ª–∏—Ç–µ —Å—Ç–∞—Ä—ã–π SDK (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
   pip uninstall openai
   
   # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Evolution SDK
   pip install evolution-openai

–®–∞–≥ 2: –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤
~~~~~~~~~~~~~~~~~~~~~~~~~

**–î–æ:**

.. code-block:: python

   from openai import OpenAI, AsyncOpenAI

**–ü–æ—Å–ª–µ:**

.. code-block:: python

   from evolution_openai import OpenAI, AsyncOpenAI

–®–∞–≥ 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**–î–æ:**

.. code-block:: python

   client = OpenAI(
       api_key="sk-your-openai-key"
   )

**–ü–æ—Å–ª–µ:**

.. code-block:: python

   client = OpenAI(
       key_id="your_EVOLUTION_key_id",
       secret="your_EVOLUTION_secret",
       base_url="https://your-endpoint.cloud.ru/v1"
   )

–®–∞–≥ 4: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
~~~~~~~~~~~~~~~~~~~~~~~~~~~

**–î–æ:**

.. code-block:: bash

   export OPENAI_API_KEY="sk-your-key"
   export OPENAI_BASE_URL="https://api.openai.com/v1"  # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ

**–ü–æ—Å–ª–µ:**

.. code-block:: bash

   export EVOLUTION_KEY_ID="your_key_id"
   export EVOLUTION_SECRET="your_secret"
   export EVOLUTION_BASE_URL="https://your-endpoint.cloud.ru/v1"

–ü—Ä–∏–º–µ—Ä—ã –º–∏–≥—Ä–∞—Ü–∏–∏
----------------

–ë–∞–∑–æ–≤—ã–π —á–∞—Ç
~~~~~~~~~~~

**–î–æ (OpenAI):**

.. code-block:: python

   from openai import OpenAI
   import os

   client = OpenAI(
       api_key=os.getenv("OPENAI_API_KEY")
   )

   response = client.chat.completions.create(
       model="gpt-3.5-turbo",
       messages=[
           {"role": "system", "content": "You are a helpful assistant."},
           {"role": "user", "content": "Hello!"}
       ],
       max_tokens=100
   )

   print(response.choices[0].message.content)

**–ü–æ—Å–ª–µ (Evolution):**

.. code-block:: python

   from evolution_openai import OpenAI
   import os

   client = OpenAI(
       key_id=os.getenv("EVOLUTION_KEY_ID"),
       secret=os.getenv("EVOLUTION_SECRET"),
       base_url=os.getenv("EVOLUTION_BASE_URL")
   )

   response = client.chat.completions.create(
       model="default",  # –ò–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –º–æ–¥–µ–ª–∏
       messages=[
           {"role": "system", "content": "You are a helpful assistant."},
           {"role": "user", "content": "Hello!"}
       ],
       max_tokens=100
   )

   print(response.choices[0].message.content)

–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥
~~~~~~~~~~~~~~~

**–î–æ (OpenAI):**

.. code-block:: python

   import asyncio
   from openai import AsyncOpenAI

   async def main():
       client = AsyncOpenAI(
           api_key="sk-your-key"
       )
       
       response = await client.chat.completions.create(
           model="gpt-3.5-turbo",
           messages=[{"role": "user", "content": "Hello async!"}]
       )
       
       print(response.choices[0].message.content)

   asyncio.run(main())

**–ü–æ—Å–ª–µ (Evolution):**

.. code-block:: python

   import asyncio
   from evolution_openai import AsyncOpenAI

   async def main():
       async with AsyncOpenAI(
           key_id="your_key_id",
           secret="your_secret",
           base_url="https://your-endpoint.cloud.ru/v1"
       ) as client:
           
           response = await client.chat.completions.create(
               model="default",
               messages=[{"role": "user", "content": "Hello async!"}]
           )
           
           print(response.choices[0].message.content)

   asyncio.run(main())

Streaming
~~~~~~~~~

**–î–æ (OpenAI):**

.. code-block:: python

   from openai import OpenAI

   client = OpenAI(api_key="sk-your-key")

   stream = client.chat.completions.create(
       model="gpt-3.5-turbo",
       messages=[{"role": "user", "content": "Tell me a story"}],
       stream=True
   )

   for chunk in stream:
       if chunk.choices[0].delta.content:
           print(chunk.choices[0].delta.content, end="")

**–ü–æ—Å–ª–µ (Evolution):**

.. code-block:: python

   from evolution_openai import OpenAI

   client = OpenAI(
       key_id="your_key_id",
       secret="your_secret",
       base_url="https://your-endpoint.cloud.ru/v1"
   )

   stream = client.chat.completions.create(
       model="default",
       messages=[{"role": "user", "content": "Tell me a story"}],
       stream=True
   )

   for chunk in stream:
       if chunk.choices[0].delta.content:
           print(chunk.choices[0].delta.content, end="")

–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
~~~~~~~~~~~~~~~~

**–î–æ (OpenAI):**

.. code-block:: python

   from openai import OpenAI
   from openai.error import OpenAIError, RateLimitError

   try:
       response = client.chat.completions.create(...)
   except RateLimitError as e:
       print(f"Rate limit exceeded: {e}")
   except OpenAIError as e:
       print(f"OpenAI error: {e}")

**–ü–æ—Å–ª–µ (Evolution):**

.. code-block:: python

   from evolution_openai import OpenAI
   from evolution_openai.exceptions import EvolutionOpenAIError, RateLimitError

   try:
       response = client.chat.completions.create(...)
   except RateLimitError as e:
       print(f"Rate limit exceeded: {e}")
   except EvolutionOpenAIError as e:
       print(f"Evolution error: {e}")

–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –º–∏–≥—Ä–∞—Ü–∏—è
-----------------------

–°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏
~~~~~~~~~~~~~~~

–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª ``migrate.py`` –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–º–µ–Ω—ã:

.. code-block:: python

   #!/usr/bin/env python3
   """
   –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏ —Å OpenAI SDK –Ω–∞ Evolution OpenAI
   """

   import os
   import re
   import argparse
   from pathlib import Path

   def migrate_file(file_path):
       """–ú–∏–≥—Ä–∏—Ä—É–µ—Ç –æ–¥–∏–Ω Python —Ñ–∞–π–ª"""
       with open(file_path, 'r', encoding='utf-8') as f:
           content = f.read()
       
       original_content = content
       
       # –ó–∞–º–µ–Ω–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
       content = re.sub(
           r'from openai import',
           r'from evolution_openai import',
           content
       )
       
       content = re.sub(
           r'import openai',
           r'import evolution_openai as openai',
           content
       )
       
       # –ó–∞–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞
       content = re.sub(
           r'OpenAI\(\s*api_key\s*=\s*["\']([^"\']+)["\']\s*\)',
           r'OpenAI(\n    key_id="your_key_id",\n    secret="your_secret",\n    base_url="https://your-endpoint.cloud.ru/v1"\n)',
           content
       )
       
       # –ó–∞–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
       content = re.sub(
           r'os\.getenv\(["\']OPENAI_API_KEY["\']\)',
           r'os.getenv("EVOLUTION_KEY_ID")',
           content
       )
       
       # –ó–∞–º–µ–Ω–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
       content = re.sub(
           r'from openai\.error import',
           r'from evolution_openai.exceptions import',
           content
       )
       
       content = re.sub(
           r'OpenAIError',
           r'EvolutionOpenAIError',
           content
       )
       
       if content != original_content:
           # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
           backup_path = f"{file_path}.backup"
           with open(backup_path, 'w', encoding='utf-8') as f:
               f.write(original_content)
           
           # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
           with open(file_path, 'w', encoding='utf-8') as f:
               f.write(content)
           
           print(f"‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω: {file_path} (—Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path})")
           return True
       else:
           print(f"‚è≠Ô∏è –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {file_path}")
           return False

   def migrate_directory(directory):
       """–ú–∏–≥—Ä–∏—Ä—É–µ—Ç –≤—Å–µ Python —Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
       directory = Path(directory)
       migrated_count = 0
       
       for py_file in directory.rglob("*.py"):
           if migrate_file(py_file):
               migrated_count += 1
       
       print(f"\nüìä –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {migrated_count}")

   def create_env_template():
       """–°–æ–∑–¥–∞–µ—Ç —à–∞–±–ª–æ–Ω .env —Ñ–∞–π–ª–∞"""
       env_content = """# Evolution OpenAI Configuration
   EVOLUTION_KEY_ID=your_key_id_here
   EVOLUTION_SECRET=your_secret_here  
   EVOLUTION_BASE_URL=https://your-endpoint.cloud.ru/v1

   # Legacy OpenAI (—É–¥–∞–ª–∏—Ç–µ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏)
   # OPENAI_API_KEY=sk-...
   """
       
       with open('.env.Evolution', 'w') as f:
           f.write(env_content)
       
       print("üìÑ –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω .env.Evolution")

   def main():
       parser = argparse.ArgumentParser(
           description="–ú–∏–≥—Ä–∞—Ü–∏—è —Å OpenAI SDK –Ω–∞ Evolution OpenAI"
       )
       parser.add_argument(
           'path',
           help="–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏"
       )
       parser.add_argument(
           '--env',
           action='store_true',
           help="–°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω .env —Ñ–∞–π–ª–∞"
       )
       
       args = parser.parse_args()
       
       if args.env:
           create_env_template()
       
       path = Path(args.path)
       
       if path.is_file() and path.suffix == '.py':
           migrate_file(path)
       elif path.is_dir():
           migrate_directory(path)
       else:
           print(f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—É—Ç—å: {path}")

   if __name__ == "__main__":
       main()

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞:

.. code-block:: bash

   # –ú–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–¥–∏–Ω —Ñ–∞–π–ª
   python migrate.py my_app.py
   
   # –ú–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—Å—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
   python migrate.py ./src
   
   # –°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω .env
   python migrate.py --env .

–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
----------------------

Docker Compose
~~~~~~~~~~~~~~

**–î–æ:**

.. code-block:: yaml

   version: '3.8'
   services:
     app:
       build: .
       environment:
         - OPENAI_API_KEY=sk-your-key
         - OPENAI_BASE_URL=https://api.openai.com/v1

**–ü–æ—Å–ª–µ:**

.. code-block:: yaml

   version: '3.8'
   services:
     app:
       build: .
       environment:
         - EVOLUTION_KEY_ID=your_key_id
         - EVOLUTION_SECRET=your_secret
         - EVOLUTION_BASE_URL=https://your-endpoint.cloud.ru/v1

Kubernetes
~~~~~~~~~~

**–î–æ:**

.. code-block:: yaml

   apiVersion: v1
   kind: ConfigMap
   metadata:
     name: openai-config
   data:
     OPENAI_API_KEY: "sk-your-key"

**–ü–æ—Å–ª–µ:**

.. code-block:: yaml

   apiVersion: v1
   kind: ConfigMap
   metadata:
     name: Evolution-config
   data:
     EVOLUTION_KEY_ID: "your_key_id"
     EVOLUTION_SECRET: "your_secret"
     EVOLUTION_BASE_URL: "https://your-endpoint.cloud.ru/v1"

–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏
---------------------

–ü—Ä–æ–≤–µ—Ä–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
~~~~~~~~~~~~~~~~~~

.. code-block:: python

   #!/usr/bin/env python3
   """
   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ Evolution OpenAI
   """

   import os
   from evolution_openai import OpenAI

   def test_connection():
       """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Evolution API"""
       try:
           client = OpenAI(
               key_id=os.getenv("EVOLUTION_KEY_ID"),
               secret=os.getenv("EVOLUTION_SECRET"),
               base_url=os.getenv("EVOLUTION_BASE_URL")
           )
           
           response = client.chat.completions.create(
               model="default",
               messages=[{"role": "user", "content": "Test connection"}],
               max_tokens=10
           )
           
           print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
           print(f"–û—Ç–≤–µ—Ç: {response.choices[0].message.content}")
           return True
           
       except Exception as e:
           print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
           return False

   def test_models():
       """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π"""
       try:
           client = OpenAI(
               key_id=os.getenv("EVOLUTION_KEY_ID"),
               secret=os.getenv("EVOLUTION_SECRET"),
               base_url=os.getenv("EVOLUTION_BASE_URL")
           )
           
           models = client.models.list()
           print(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏: {len(models.data)}")
           
           for model in models.data:
               print(f"  - {model.id}")
           
           return True
           
       except Exception as e:
           print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π: {e}")
           return False

   def main():
       print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Evolution OpenAI")
       print("=" * 40)
       
       # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
       required_vars = ["EVOLUTION_KEY_ID", "EVOLUTION_SECRET", "EVOLUTION_BASE_URL"]
       missing_vars = [var for var in required_vars if not os.getenv(var)]
       
       if missing_vars:
           print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {', '.join(missing_vars)}")
           return False
       
       print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
       
       # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
       success = True
       success &= test_connection()
       success &= test_models()
       
       if success:
           print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
       else:
           print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –º–∏–≥—Ä–∞—Ü–∏–∏")
       
       return success

   if __name__ == "__main__":
       exit(0 if main() else 1)

–ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è
-------------------------

–ü—Ä–æ–±–ª–µ–º–∞: "Module not found"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**–û—à–∏–±–∫–∞:**

.. code-block::

   ModuleNotFoundError: No module named 'openai'

**–†–µ—à–µ–Ω–∏–µ:**

.. code-block:: python

   # –ó–∞–º–µ–Ω–∏—Ç–µ –≤—Å–µ –∏–º–ø–æ—Ä—Ç—ã
   # from openai import OpenAI
   from evolution_openai import OpenAI

–ü—Ä–æ–±–ª–µ–º–∞: "Invalid credentials"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**–û—à–∏–±–∫–∞:**

.. code-block::

   AuthenticationError: Invalid credentials

**–†–µ—à–µ–Ω–∏–µ:**

1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å ``key_id`` –∏ ``secret``
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ ``base_url`` –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫–ª—é—á–∞

–ü—Ä–æ–±–ª–µ–º–∞: "Model not found"
~~~~~~~~~~~~~~~~~~~~~~~~~~~

**–û—à–∏–±–∫–∞:**

.. code-block::

   NotFoundError: Model 'gpt-3.5-turbo' not found

**–†–µ—à–µ–Ω–∏–µ:**

.. code-block:: python

   # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–µ
   response = client.chat.completions.create(
       model="default",  # –ò–ª–∏ –¥—Ä—É–≥–æ–µ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
       messages=[...]
   )

–ü—Ä–æ–±–ª–µ–º–∞: –°—Ç–∞—Ä—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
~~~~~~~~~~~~~~~~~~~~~~~~~~~

**–û—à–∏–±–∫–∞:**

.. code-block::

   NameError: name 'OpenAIError' is not defined

**–†–µ—à–µ–Ω–∏–µ:**

.. code-block:: python

   # –ó–∞–º–µ–Ω–∏—Ç–µ –∏–º–ø–æ—Ä—Ç—ã –∏—Å–∫–ª—é—á–µ–Ω–∏–π
   # from openai.error import OpenAIError
   from evolution_openai.exceptions import EvolutionOpenAIError

Rollback –ø–ª–∞–Ω
-------------

–ï—Å–ª–∏ –º–∏–≥—Ä–∞—Ü–∏—è –≤—ã–∑–≤–∞–ª–∞ –ø—Ä–æ–±–ª–µ–º—ã, –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–æ –æ—Ç–∫–∞—Ç–∏—Ç—å—Å—è:

.. code-block:: bash

   # 1. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
   find . -name "*.py.backup" -exec bash -c 'mv "$1" "${1%.backup}"' _ {} \;
   
   # 2. –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π SDK
   pip uninstall evolution-openai
   pip install openai
   
   # 3. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
   export OPENAI_API_KEY="sk-your-original-key"

–ß–µ–∫-–ª–∏—Å—Ç –º–∏–≥—Ä–∞—Ü–∏–∏
-----------------

.. list-table:: –ß–µ–∫-–ª–∏—Å—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏
   :header-rows: 1
   :widths: 70 30

   * - –ó–∞–¥–∞—á–∞
     - –°—Ç–∞—Ç—É—Å
   * - ‚òê –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ``evolution-openai``
     - 
   * - ‚òê –û–±–Ω–æ–≤–ª–µ–Ω—ã –∏–º–ø–æ—Ä—Ç—ã –≤–æ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö
     - 
   * - ‚òê –ò–∑–º–µ–Ω–µ–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
     - 
   * - ‚òê –û–±–Ω–æ–≤–ª–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
     - 
   * - ‚òê –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞–∑–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π
     - 
   * - ‚òê –û–±–Ω–æ–≤–ª–µ–Ω—ã –∏—Å–∫–ª—é—á–µ–Ω–∏—è
     - 
   * - ‚òê –û–±–Ω–æ–≤–ª–µ–Ω—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
     - 
   * - ‚òê –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
     - 
   * - ‚òê –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
     - 
   * - ‚òê –û–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞
     - 

–ó–∞–∫–ª—é—á–µ–Ω–∏–µ
----------

–ú–∏–≥—Ä–∞—Ü–∏—è —Å OpenAI SDK –Ω–∞ Evolution OpenAI - —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ—Ü–µ—Å—Å, –∫–æ—Ç–æ—Ä—ã–π —Ç—Ä–µ–±—É–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∫–æ–¥–µ. –û—Å–Ω–æ–≤–Ω–æ–µ –æ—Ç–ª–∏—á–∏–µ - –≤ —Å–ø–æ—Å–æ–±–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º.

**–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏:**

‚úÖ –î–æ—Å—Ç—É–ø –∫ –º–æ–¥–µ–ª—è–º –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ Cloud.ru
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏
‚úÖ –¢–æ—Ç –∂–µ —É–¥–æ–±–Ω—ã–π API
‚úÖ –ü–æ–ª–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º
‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Å–µ—Ö —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π 